version: '3.8'
services:
  postgres:
    image: postgres:16
    container_name: whale-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: whale
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d whale"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    command: 
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "max_wal_size=1GB"
      - "-c"
      - "checkpoint_timeout=15min"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "effective_cache_size=512MB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "work_mem=4MB"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "max_worker_processes=4"
      - "-c"
      - "max_parallel_workers=4"
      - "-c"
      - "max_parallel_workers_per_gather=2"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "log_min_duration_statement=1000"
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"
      - "-c"
      - "log_lock_waits=on"
      - "-c"
      - "log_temp_files=0"
      - "-c"
      - "log_autovacuum_min_duration=0"
      - "-c"
      - "autovacuum_max_workers=2"
      - "-c"
      - "autovacuum_vacuum_scale_factor=0.2"
      - "-c"
      - "autovacuum_analyze_scale_factor=0.1"
      - "-c"
      - "autovacuum_vacuum_threshold=100"
      - "-c"
      - "autovacuum_analyze_threshold=100"
      - "-c"
      - "idle_in_transaction_session_timeout=5min"
      - "-c"
      - "statement_timeout=15min"
      - "-c"
      - "lock_timeout=30s"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: whale-backend
    ports:
      - "3000:3000"
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/whale?schema=public
      - JWT_SECRET=17d363697c6bb12e7959f239b377e3dc2e71a0a65fc72cec0cf36b3cb2d1af9c14d9379c40b78b2e37fef48b5c166d1ddbcab82a84d95cae69b5c7bca7ef626a
      - TRANSACTION_BOT_TOKEN=8468829454:AAH1CHwOjJRQBf_H0m6x7eGdIYKApn3cmeM
      - TELEGRAM_BOT_TOKEN=8036987446:AAFiY_q4TVpZKm2sQB32JJbIpKpzxsL0aZs
      - ADMIN_BOT_TOKEN=8036987446:AAFiY_q4TVpZKm2sQB32JJbIpKpzxsL0aZs
      - BOT_NAME=apayukita_bot
      - NODE_ENV=development
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm install && npx prisma generate && nodemon --legacy-watch --watch src --ext ts,json --exec 'npm run start:dev'"
  bot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: whale-bot
    environment:
      - TELEGRAM_BOT_TOKEN=8036987446:AAFiY_q4TVpZKm2sQB32JJbIpKpzxsL0aZs
      - NODE_ENV=development
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && nodemon --legacy-watch --watch src --ext ts,json --exec 'npm run start:bot'"

  transaction-bot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: whale-transaction-bot
    environment:
      - TRANSACTION_BOT_TOKEN=8468829454:AAH1CHwOjJRQBf_H0m6x7eGdIYKApn3cmeM
      - NODE_ENV=development
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && nodemon --legacy-watch --watch src --ext ts,json --exec 'npm run start:transaction-bot'"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: whale-frontend
    ports:
      - "8080:80"
    environment:
      - VITE_API_URL="https://apayukita.com/api"
      - VITE_NODE_ENV=prod
    depends_on:
      - backend
volumes:
  postgres_data: